// Code generated by MockGen. DO NOT EDIT.
// Source: ./pkg/time.go

// Package pkg_mock is a generated GoMock package.
package pkg_mock

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
	time "time"
)

// MocktimeWrapper is a mock of timeWrapper interface
type MocktimeWrapper struct {
	ctrl     *gomock.Controller
	recorder *MocktimeWrapperMockRecorder
}

// MocktimeWrapperMockRecorder is the mock recorder for MocktimeWrapper
type MocktimeWrapperMockRecorder struct {
	mock *MocktimeWrapper
}

// NewMocktimeWrapper creates a new mock instance
func NewMocktimeWrapper(ctrl *gomock.Controller) *MocktimeWrapper {
	mock := &MocktimeWrapper{ctrl: ctrl}
	mock.recorder = &MocktimeWrapperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MocktimeWrapper) EXPECT() *MocktimeWrapperMockRecorder {
	return m.recorder
}

// Now mocks base method
func (m *MocktimeWrapper) Now() time.Time {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Now")
	ret0, _ := ret[0].(time.Time)
	return ret0
}

// Now indicates an expected call of Now
func (mr *MocktimeWrapperMockRecorder) Now() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Now", reflect.TypeOf((*MocktimeWrapper)(nil).Now))
}
